# 워크플로우 이름
name: Java CD with Docker

# 워크플로우 트리거 설정
on:
  push:
    branches:
      - "main"
      - "develop"
      - "feature/*"
      - "release/*"
  pull_request:
    branches:
      - "main"
      - "develop"
      - "release/*"
    
# 워크플로우 작업 설정
jobs:
  deploy:
    runs-on: ubuntu-latest # ubuntu 최신 버전에서 실행
    
    steps:
    - uses: actions/checkout@v4 # 소스코드 체크아웃
    
    - name: Set up JDK 21 # JDK 21 설정
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Setup Gradle # Gradle 설정
      uses: gradle/gradle-build-action@v2
      
    - name: Build with Gradle # Gradle로 빌드
      run: ./gradlew clean build -x test
      
    - name: Login to Docker Hub # Docker Hub 로그인
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push Docker image # Docker 이미지 빌드 및 푸시
      uses: docker/build-push-action@v5
      with:
        context: . # 현재 디렉토리를 빌드 컨텍스트로 사용
        push: true # 빌드된 이미지를 Docker Hub에 푸시
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/stockscope:latest # 이미지 태그 설정
        
    - name: Deploy to EC2 # EC2에 SSH 접속하여 배포
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Docker Hub에서 이미지 가져오기
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/stockscope:latest
          
          # 실행 중인 컨테이너가 있으면 중지 및 삭제
          docker stop stockscope || true
          docker rm stockscope || true
          
          # 컨테이너 실행
          docker run -d --name stockscope \
            -p 8080:8080 \
            -e SPRING_PROFILES_ACTIVE=prod \
            ${{ secrets.DOCKERHUB_USERNAME }}/stockscope:latest